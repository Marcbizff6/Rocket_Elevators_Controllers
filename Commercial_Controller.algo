'********** Default value **********'
test de patate
SET batery to operational
SET total_column to 4
SET numberColumnBasement to 1
SET ElevatorStatus to idle
SET floorUser to 0
SET floorElevator to 0
SET total_elevator to 12
SET distanceSmallest to 0
SET total_floor to 66
SET total_basement : 6
SET RC to 0
SET basement1 to -1
SET basement6 to -6
SET numberOfFloorByColumn EQUAL
    total_floor - total_basement DIVIDE BY total_column MINUS 1

'********** button section **********'
SEQUENCE button_down
    SET directionUser to direction_down
    call findElevator
    call moveElevator
END SEQUENCE

SEQUENCE button_up
    SET directionUser to direction_up
    call findElevator
    call moveElevator
END SEQUENCE

SEQUENCE button_door_open
    call door_open
END SEQUENCE

SEQUENCE button_door_close
    call door_close
END SEQUENCE

SEQUENCE floor_choice
    call moveElevator WITH floor_choice
END SEQUENCE

'********** door section **********'

SEQUENCE door_open
    call door_open WITH Elevator
END SEQUENCE

SEQUENCE door_close
    call door_close WITH Elevator
END SEQUENCE

SEQUENCE weight_limit
    If READ weight > weight_limit
        THEN door_open
    ELSE wait
    END IF
END SEQUENCE

SEQUENCE door_obstruct
    IF READ door_sensor = TRUE
        THEN call door_wait
    END IF
END SEQUENCE    
'********** move section **********'

SEQUENCE directionUser
    IF floor_choice < floorUser
    SET directionUser EQUAL direction_down
    
    ELSE IF floor_choice > floorUser
    SET directionUser EQUAL direction_up

    ELSE
    SET directionUser to
    Return directionUser EQUAL direction
END SEQUENCE

SEQUENCE directionElevator
    IF floor_choice < floorElevator
        SET directionElevator to direction_up
    ELSE IF floor_choice > floorElevator
        SET directionElevator to direction_down
    Return directionElevator
END SEQUENCE

SEQUENCE moveElevator
    If floor_choice != floorElevator
        THEN move Elevator TO floor_choice
        THEN call door_open
END SEQUENCE

SEQUENCE findElevator
    FOR EACH column in columnList
        FOR EACH elevator in elevatorList
            IF floorUser EQUAL floorElevator AND elevatorStatus IS idle
            return elevator

            IF floorUser EQUAL floorElevator AND elevatorStatus IS stop
            return elevator

            ELSE IF directionUser EQUAL direction_down AND directionElevator EQUAL direction_down AND floorUser < floorElevator
            return elevator

            ELSE IF directionUser EQUAL direction_up AND directionElevator EQUAL direction_up AND floorUser > floorElevator
            return elevator

            ELSE findNearElevator WITH elevator
            return elevator
            END IF
        END FOR
    END FOR
END SEQUENCE

SEQUENCE findNearElevator USING floorUser AND floorElevator AND directionUser
        COMPUTE distance EQUAL TO ABSOLUTE VALUE OF floorElevator MINUS floorUser
        SET smallestDistance to distance

        FOR EACH elevator
            IF directionElevator = directionUser
            COMPUTE distance EQUAL TO ABSOLUTE VALUE OF floorElevator MINUS floorUser
                IF distance < smallestDistance
                    SET distance to smallestDistance
                END IF
            END IF
        END FOR
        return smallestDistance
END SEQUENCE
